{"ast":null,"code":"import { ADD_CART, DELETE_CART, REMOVE_ALL, SEARCH_DATA, STORE_DATA } from \"../ActionTypes/actiontype\";\nconst init = {\n  data: [],\n  search: \"\" // cart: [],\n\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case STORE_DATA:\n      return { ...state,\n        data: payload\n      };\n\n    case SEARCH_DATA:\n      return { ...state,\n        search: payload\n      };\n    // case ADD_CART:\n    //   var AddCart = [...state.cart, payload];\n    //   return { ...state, cart: AddCart };\n    // case DELETE_CART:\n    //   var dcart = state.cart.filter((e) => {\n    //     if (e.id !== payload) {\n    //       return e;\n    //     }\n    //   });\n    //   return { ...state, cart: [...dcart] };\n    // case REMOVE_ALL:\n    //   return { ...state, cart: [] };\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer };","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/flipkart2022/src/Redux/reducer/reducer.js"],"names":["ADD_CART","DELETE_CART","REMOVE_ALL","SEARCH_DATA","STORE_DATA","init","data","search","reducer","state","type","payload"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,2BANP;AAOA,MAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE,EADK;AAEXC,EAAAA,MAAM,EAAE,EAFG,CAGX;;AAHW,CAAb;;AAKA,MAAMC,OAAO,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BJ,IAA4B;AAAA,MAAtB;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AACnD,UAAQD,IAAR;AACE,SAAKN,UAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,IAAI,EAAEK;AAAlB,OAAP;;AACF,SAAKR,WAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,MAAM,EAAEI;AAApB,OAAP;AACF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOF,KAAP;AAnBJ;AAqBD,CAtBD;;AAuBA,SAASD,OAAT","sourcesContent":["import {\r\n  ADD_CART,\r\n  DELETE_CART,\r\n  REMOVE_ALL,\r\n  SEARCH_DATA,\r\n  STORE_DATA,\r\n} from \"../ActionTypes/actiontype\";\r\nconst init = {\r\n  data: [],\r\n  search: \"\",\r\n  // cart: [],\r\n};\r\nconst reducer = (state = init, { type, payload }) => {\r\n  switch (type) {\r\n    case STORE_DATA:\r\n      return { ...state, data: payload };\r\n    case SEARCH_DATA:\r\n      return { ...state, search: payload };\r\n    // case ADD_CART:\r\n    //   var AddCart = [...state.cart, payload];\r\n    //   return { ...state, cart: AddCart };\r\n\r\n    // case DELETE_CART:\r\n    //   var dcart = state.cart.filter((e) => {\r\n    //     if (e.id !== payload) {\r\n    //       return e;\r\n    //     }\r\n    //   });\r\n    //   return { ...state, cart: [...dcart] };\r\n    // case REMOVE_ALL:\r\n    //   return { ...state, cart: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport { reducer };\r\n"]},"metadata":{},"sourceType":"module"}